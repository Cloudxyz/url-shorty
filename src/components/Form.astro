---
import Logo from "./Logo.astro";
import { Icon } from 'astro-icon/components';
---

<div class="mx-auto max-w-2xl py-32 sm:py-48 lg:py-56">
	<div class="text-center">
		<Logo />
		<form class="w-full mb-10" method="POST">
			<div class="md:flex md:items-center mb-6">
				<input class="bg-white appearance-none border-2 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none" name="url" id="url" type="url" placeholder="Enter the url to shorten" required>
			</div>
			<div class="flex items-center justify-center">
				<button class="shadow bg-indigo-600 hover:bg-indigo-500 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded">
					Give me the shorty
				</button>
			</div>
		</form>
		<a href="" target="_blank" id="url-generated" class="text-4xl font-bold tracking-tight text-white-900 mt-10 hidden flex items-center justify-center">
			<span class="mr-5 text-white"></span>
			<Icon name="fluent-mdl2:navigate-external-inline" class="text-white"/>
		</a>
	</div>
</div>
<div class="text-center">
	<p class="text-gray-400 text-sm">Â© 2024 Url Shorty. All rights reserved.</p>
</div>

<script>
	const handleSubmit = async (event: Event) => {
		event.preventDefault();
		const errors = { url: ""};
		try {
			const data = new FormData(event.target as HTMLFormElement);
			const url = data.get("url");
			if (typeof url !== "string" || url.length < 1) {
				errors.url += "Please enter a valid url";
			}
			const hasErrors = Object.values(errors).some(msg => msg)
			if (!hasErrors) {
				await createShortUrl(url).catch((error) => {
					errors.url = error.message;
				}).then((shortUrl) => {
					let urlInput = `https://${shortUrl}.shorty`;
					let urlGenerated = document.getElementById("url-generated");
					urlGenerated.classList.remove("hidden");
					if (urlGenerated) {
						urlGenerated.querySelector("span").textContent = urlInput;
						urlGenerated.setAttribute("href", url);
					}
					return shortUrl;
				});
			}
		} catch (error) {
			if (error instanceof Error) {
				console.error(error.message);
			}
		}
	};

	const form = document.querySelector("form");
	form.addEventListener("submit", handleSubmit);

	async function createShortUrl(url: string) {
		const shortUrl = alphaNumericString(8);
		return shortUrl;
	}

	function alphaNumericString(length) {
		let charset = "abcdefghijklmnopqrstuvwxyz0123456789",
			retVal = "";
		for (let i = 0, n = charset.length; i < length; ++i) {
			retVal += charset.charAt(Math.floor(Math.random() * n));
		}
		return retVal;
	}
</script>